{
  "compilerOptions": {
    /* Opção Basica */
    "target": "es5" /* Especifique a versão de destino do ECMAScript: 'ES3' (padrão), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' ou 'ESNEXT'. */,
    "resolveJsonModule": true,
    "module": "commonjs" /* Especifique a geração de código do módulo: 'nenhum', 'commonjs', 'amd', 'system', 'umd', 'es2015' ou 'ESNext. */,
    // "lib": [],                             /* Especifique arquivos de biblioteca a serem incluídos na compilação. */
    // "allowJs": true,                       /* Permitir que arquivos javascript sejam compilados. */
    // "checkJs": true,                       /* Relatar erros em .js arquivos. */
    // "jsx": "preserve",                     /* Especificar a geração de código JSX: 'preservar', 'reagir-native' ou 'reagir'. */
    "declaration": true /*  Gera arquivo '.d.ts' correspondente. */,
    // "declarationMap": true,                /* Gera um código fonte para cada arquivo '.d.ts' correspondente. */
    "sourceMap": true /*  Gera arquivo '.map' correspondente. */,
    // "outFile": "./",                       /* Concatenar e emitir saída para um único arquivo. */
    "outDir": "./dist" /*  Redirecione a estrutura de saída para o diretório. */,
    // "rootDir": "./src/",                   /* Especifique o diretório raiz dos arquivos de entrada. Use para controlar a estrutura do diretório de saída com --outDir.*/
    // "composite": true,                     /* Habilitar compilação de projeto  */
    "removeComments": false /* Não emita comentários à saída. */
    // "noEmit": true,                        /* Não emita saídas.  */
    // "importHelpers": true,                 /* Importar emitem ajudantes de 'tslib'. */
    // "downlevelIteration": true,            /* Fornecer suporte total para iteráveis em 'for-of', espalhar e desestruturar ao direcionar 'ES5' ou 'ES3'. */
    // "isolatedModules": true,               /* Transpilar cada arquivo como um módulo separado (semelhante a 'ts.transpileModule'). */

    /* Opções rigorosas de verificação de tipo  */
    // "strict": true,                        /* Habilite todas as opções estritas de verificação de tipo. */
    // "noImplicitAny": true,                 /* Levantar erro em expressões e declarações com um tipo 'qualquer' implícito. */
    // "strictNullChecks": true,              /* Habilite verificações nulas rigorosas.*/
    // "strictFunctionTypes": true,           /* Habilite uma verificação rigorosa dos tipos de função.  */
    // "strictPropertyInitialization": true,  /* Habilite uma verificação rigorosa dos tipos de função.  */
    // "noImplicitThis": true,                /*  Aumente o erro nas expressões 'isso' com um tipo 'qualquer' implícito. */
    // "alwaysStrict": true,                  /*  Parse em modo rigoroso e emita "use rigoroso" para cada arquivo de origem. */

    /* Cheques adicionai */
    // "noUnusedLocals": true,                /*  Relatar erros em moradores não usados. */
    // "noUnusedParameters": true,            /* Relatar erros em parâmetros não usados. */
    // "noImplicitReturns": true,             /*  Relatar erro quando nem todos os caminhos de código na função retornam um valor. */
    // "noFallthroughCasesInSwitch": true,    /*  Relatar erros de casos de queda na instrução do switch. */

    /* Opções de resolução de módulos */
    // "moduleResolution": "node",            /* Especifique a estratégia de resolução do módulo: 'nó' (Nó.js) ou 'clássico' (Pré-1.6 do TypeScript).  */
    // "baseUrl": "./",                       /* Diretório base para resolver nomes de módulos não absolutos. */
    // "paths": {},                           /*  Uma série de entradas que re mapeiam as importações para locais de procura em relação ao 'baseUrl'. */
    // "rootDirs": [],                        /*Lista de pastas raiz cujo conteúdo combinado representa a estrutura do projeto em tempo de execução. */
    // "typeRoots": [],                       /* Lista de pastas para incluir definições de tipo de. */
    // "types": [],                           /* Digite arquivos de declaração a serem incluídos na compilação. */
    // "allowSyntheticDefaultImports": true   /* Permitir importações padrão de módulos sem exportação padrão. Isso não afeta a emitia de código, apenas digite. */,
    // "esModuleInterop": true                /* Permite emitir interoperabilidade entre módulos CommonJS e ES através da criação de objetos namespace para todas as importações. Implica 'permite 300defaultImports'. */
    // "preserveSymlinks": true,              /* Não resolva o caminho real dos symlinks. */

    /* Opções de mapa de origem  */
    // "sourceRoot": "",                      /*Especifique o local onde o depurador deve localizar arquivos TypeScript em vez de locais de origem. */
    // "mapRoot": "",                         /* Especifique o local onde o depurador deve localizar arquivos de mapa em vez de locais gerados.. */
    // "inlineSourceMap": true,               /* Emita um único arquivo com mapas de origem em vez de ter um arquivo separado. */
    // "inlineSources": true,                 /* Emite a fonte ao lado dos arquivos de origem dentro de um único arquivo; requer '--inlineSourceMap' ou '-sourceMap' a ser definido. */

    /* Opções Experimentais  */
    // "experimentalDecorators": true,        /* Permite suporte experimental para decoradores ES7. */
    // "emitDecoratorMetadata": true,         /*  Permite suporte experimental para emitir metadados do tipo para decoradores. */
  },
  "include": ["src/**/*"],
  "exclude": ["src/middleware/middleware.ts", "img/*"]
}
